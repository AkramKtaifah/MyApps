/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Utilities.DatabaseOperations;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.YearMonth;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author AkramKutifah
 */
public class MainFrame extends javax.swing.JFrame {

    static DatabaseOperations db = null;

    static ArrayList<JCheckBox> jCheckBoxes;
    static ArrayList<String> planDatume;
    static ArrayList<String> allNamen;    
    static String jahrPlan;
    static String monatPlan;
    static int monatAlsNummer;
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() throws Exception {
        initComponents();
        try{
            db = new DatabaseOperations();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sie müssen die XAMPP-App einschalten");
            System.exit(0);
        }
        
        allNamen = new ArrayList<>();        
        jLabel10.setVisible(false);
        jLabel11.setVisible(false);
        jLabel12.setVisible(false);
        
        try{
            String sql = "select jahrMonat from helfende";
            ResultSet rs = db.select(sql);
            while(rs.next()){
                if(rs.getString("jahrMonat") != null && !rs.getString("jahrMonat").equals("")){
                    String[] ss = rs.getString("jahrMonat").split(",");
                    jLabel9.setText(ss[0]);
                    jComboBox1.setSelectedItem(ss[1]);
                }                
            }
            if(jLabel9.getText().equals("")){
                jLabel9.setText(LocalDate.now().getYear()+"");
                jComboBox1.setSelectedIndex(LocalDate.now().getMonthValue() - 1);        
            }
        }catch(Exception e){
            
        }
        
        setTheCheckboxes();
        getAllNamen();
        
        jTextField2.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
              warn();
            }
            public void removeUpdate(DocumentEvent e) {
              warn();
            }
            public void insertUpdate(DocumentEvent e) {
              warn();
            }

            public void warn() {
                jLabel10.setVisible(false);
                if(jLabel12.getText().startsWith("Er/Sie") || jLabel12.getText().startsWith("Es gibt")){
                    jLabel12.setVisible(false);
                }                
                jComboBox2.removeAllItems();              
                String name = jTextField2.getText();
                if(!name.equals("") && !name.matches("[ ]+")){                    
                    for(int i = 0; i < allNamen.size(); i++){
                        if(allNamen.get(i).toLowerCase().startsWith(name.toLowerCase())){
                            jComboBox2.addItem(allNamen.get(i));
                        }
                    }
                }
            }
        });
        
        jTextField1.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
              warn();
            }
            public void removeUpdate(DocumentEvent e) {
              warn();
            }
            public void insertUpdate(DocumentEvent e) {
              warn();
            }

            public void warn() {
                jLabel11.setVisible(false);                
            }
        });
        
        this.addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosing(java.awt.event.WindowEvent windowEvent) {
            String jahr = jLabel9.getText();
            String monat = (String)jComboBox1.getSelectedItem();
            
            try {
                String sql = "update helfende set jahrMonat = '" + jahr + "," + monat + "' limit 1";
                db.update(sql);

                db.close();
                
                System.exit(0);
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            }
        }
         });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox32 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mittagstisch");

        jLabel1.setText("Neuer/e Helfer/in");

        jLabel2.setText("Montag");

        jLabel3.setText("Mittwoch");

        jLabel4.setText("Freitag");

        jLabel5.setText("Wann?");

        jCheckBox32.setText("Alle");
        jCheckBox32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox32ActionPerformed(evt);
            }
        });

        jButton1.setText("Hinzufügen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Hinzufügen");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Bearbeiten");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Monat");

        jLabel8.setText("Jahr");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("2024");

        jButton4.setText("+");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("-");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 197, Short.MAX_VALUE)
        );

        jLabel7.setText("Helfer/in");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton6.setText("Bearbeiten");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Löschen");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Den Plan schauen");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(255, 0, 0));

        jLabel11.setForeground(new java.awt.Color(255, 0, 0));

        jLabel12.setForeground(new java.awt.Color(255, 0, 0));

        jLabel13.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel13.setText("Helfende-Daten");

        jLabel14.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel14.setText("Den Plan erstellen");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton8)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel9)
                            .addGap(10, 10, 10)
                            .addComponent(jButton4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton5))))
                .addGap(73, 73, 73))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton2))
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 261, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(117, 117, 117))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel5)
                                                    .addGap(10, 10, 10))
                                                .addComponent(jCheckBox32))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGap(38, 38, 38)
                                                    .addComponent(jLabel2)
                                                    .addGap(56, 56, 56)
                                                    .addComponent(jLabel3)
                                                    .addGap(54, 54, 54)
                                                    .addComponent(jLabel4))))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(59, 59, 59)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton6)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton7)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))))
                .addGap(3, 3, 3)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox32)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1)
                                    .addComponent(jButton6)
                                    .addComponent(jButton7)
                                    .addComponent(jButton8))))
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int jahr = Integer.parseInt(jLabel9.getText());
        int monat = jComboBox1.getSelectedIndex() + 1;
        String name = (String)jComboBox2.getSelectedItem();
        
        if(name != null){
            try {
            String sql = "select tage, name from plan where jahr = " + jahr + " and monat = " + monat + "";
            ResultSet rs = db.select(sql);
            boolean state = false;
            while(rs.next()){
                if(rs.getString("name").equalsIgnoreCase(name)){
                    state = true;
                    break;
                }
            }
            if(!state){
                        String allSelectedDates = "";
                        boolean status = false;
                        String[] verbotenCheckBox = null;

                        for(int i = 0; i < jCheckBoxes.size(); i++){
                            if(jCheckBoxes.get(i).isSelected()){
                                if(jCheckBoxes.get(i).getText().contains("(7)")){                                
                                    status = true;
                                    verbotenCheckBox = jCheckBoxes.get(i).getText().split("[(]");                                                               
                                    break;
                                }
                                verbotenCheckBox = jCheckBoxes.get(i).getText().split("[(]");
                                allSelectedDates = allSelectedDates + verbotenCheckBox[0].trim() + ",";
                            }
                        }
                        if(status){
                            jLabel12.setText("Am " + verbotenCheckBox[0] + "." + jComboBox1.getSelectedItem().toString() + " ist es voll, deshalb können Sie es nicht auswählen");
                            jLabel12.setVisible(true);
                        }
                        else{
                            if(!allSelectedDates.equals("")){
                                sql = "insert into plan (jahr, monat, tage, name) values (" + jahr + ", " + monat + ", '" + allSelectedDates + "', '" + name + "')";
                                db.insert(sql);                    
                                
                                JOptionPane.showMessageDialog(null, "Der Eingabevorgang wurde erfolgreich abgeschlossen!!!");

                                jTextField2.setText("");
                                jComboBox2.removeAllItems();

                                setTheCheckboxes();
                            }
                            else{
                                jLabel12.setText("Sie müssen mindestens EINEN TAG auswählen");
                                jLabel12.setVisible(true);
                            }
                        }                    
            }    
            else{
                jLabel12.setText("Er/Sie existiert bereits im Plan, Sie müssen BEARBEITEN-Button benutzen");
                jLabel12.setVisible(true);
            }
                } catch (Exception ex) {

                }
        }
        else{
            jLabel10.setText("*erforderlich");
            jLabel10.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox32ActionPerformed
        if(jLabel12.getText().startsWith("Am") || jLabel12.getText().startsWith("Sie müssen")){
            jLabel12.setVisible(false);
        }
        if(jCheckBox32.isSelected()){
            for(int i = 0; i < jCheckBoxes.size(); i++){
                jCheckBoxes.get(i).setSelected(true);
                jPanel2.add(jCheckBoxes.get(i));
            }
        }
        else{
            for(int i = 0; i < jCheckBoxes.size(); i++){
                jCheckBoxes.get(i).setSelected(false);
                jPanel2.add(jCheckBoxes.get(i));
            }    
        }
    }//GEN-LAST:event_jCheckBox32ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String name = jTextField1.getText();

        if(("".equals(name)) || name.matches("[ ]+")){
            jLabel11.setText("*erforderlich");
            jLabel11.setVisible(true);
        }
        else{
            String sql = "select name from helfende";            
            try {
                ResultSet rs = db.select(sql);
                
                boolean state = false;
                while(rs.next()){
                    if(name.equalsIgnoreCase(rs.getString("name"))){
                        state = true;
                        break;
                    }
                }
                if(state){
                    jLabel11.setText("Er/Sie existiert bereits");
                    jLabel11.setVisible(true);
                }
                else{
                    sql = "insert into helfende (name) values ('" + name + "')";
                    db.insert(sql);
                                        
                    JOptionPane.showMessageDialog(null, "Der Eingabevorgang wurde erfolgreich abgeschlossen!!!");
                    
                    jTextField1.setText("");  
                    getAllNamen();
                    jTextField2.setText("");
                    jComboBox2.removeAllItems();
                }
            } catch (Exception ex) {
                
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField2.setText("");
        jComboBox2.removeAllItems();
        new EditNamen().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        try {
            setTheCheckboxes();
        } catch (Exception ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int neuJahr = Integer.parseInt(jLabel9.getText());
        jLabel9.setText((neuJahr + 1) + "");
        try {
            setTheCheckboxes();
        } catch (Exception ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int neuJahr = Integer.parseInt(jLabel9.getText());
        jLabel9.setText((neuJahr - 1) + "");
        try {
            setTheCheckboxes();
        } catch (Exception ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int jahr = Integer.parseInt(jLabel9.getText());
        int monat = jComboBox1.getSelectedIndex() + 1;
        String name = (String)jComboBox2.getSelectedItem();
        String tage = "";
        
        if(name != null){
            try {

            String sql = "select tage, name from plan where jahr = " + jahr + " and monat = " + monat + "";
            ResultSet rs = db.select(sql);
            boolean state = false;
            while(rs.next()){
                if(rs.getString("name").equalsIgnoreCase(name)){
                    tage = rs.getString("tage");
                    state = true;
                    break;
                }
            }

            if(state){
                        String allSelectedDates = "";
                        boolean status = false;
                        String[] verbotenCheckBox = null;
                        for(int i = 0; i < jCheckBoxes.size(); i++){
                            if(jCheckBoxes.get(i).isSelected()){
                                if(jCheckBoxes.get(i).getText().contains("(7)")){                                                                    
                                    verbotenCheckBox = jCheckBoxes.get(i).getText().split("[(]");
                                    String[] ss = tage.split(",");
                                    for(int j = 0; j < ss.length; j++){
                                        if(verbotenCheckBox[0].trim().equals(ss[j])){
                                            status = false;
                                            break;
                                        }
                                        status = true;
                                    }
                                }
                                verbotenCheckBox = jCheckBoxes.get(i).getText().split("[(]");
                                allSelectedDates = allSelectedDates + verbotenCheckBox[0].trim() + ",";
                            }
                        }

                        if(status){
                            jLabel12.setText("Am " + verbotenCheckBox[0] + "." + jComboBox1.getSelectedItem().toString() + " ist es voll, deshalb können Sie es nicht auswählen!!!");
                            jLabel12.setVisible(true);                            
                        }
                        else{
                            if(!allSelectedDates.equals("")){
                                sql = "update plan set tage = '" + allSelectedDates + "' where jahr = " + jahr + " and monat = " + monat + " and name = '" + name + "'";
                                db.update(sql);                    

                                JOptionPane.showMessageDialog(null, "Der Änderungsprozess wurde erfolgreich abgeschlossen!!!");

                                jTextField2.setText("");
                                jComboBox2.removeAllItems();

                                setTheCheckboxes();
                            }
                            else{
                                jLabel12.setText("Sie müssen mindestens EINEN TAG auswählen");
                                jLabel12.setVisible(true);
                            }
                        }                    
            }
            else{
                jLabel12.setText("Es gibt KEINEN/KEINE mit diesen Daten");
                jLabel12.setVisible(true);
            }
                } catch (Exception ex) {

                }
        }
        else{
            jLabel10.setText("*erforderlich");
            jLabel10.setVisible(true);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int jahr = Integer.parseInt(jLabel9.getText());
        int monat = jComboBox1.getSelectedIndex() + 1;
        String name = (String)jComboBox2.getSelectedItem();
        
        if(name != null){
            try {

            String sql = "select tage, name from plan where jahr = " + jahr + " and monat = " + monat + "";
            ResultSet rs = db.select(sql);
            boolean state = false;
            while(rs.next()){
                if(rs.getString("name").equalsIgnoreCase(name)){
                    state = true;
                    break;
                }
            }

            if(state){
                int choice = JOptionPane.showConfirmDialog(null, "Sind Sie sich sicher?", "Achtung!!!", JOptionPane.YES_NO_OPTION);
                    if(choice == JOptionPane.YES_OPTION){
                        sql = "delete from plan where jahr = " + jahr + " and monat = " + monat + " and name = '" + name + "'";
                        db.delete(sql);

                        JOptionPane.showMessageDialog(null, "Der Löschvorgang wurde erfolgreich abgeschlossen!!!");

                        jTextField2.setText("");
                        jComboBox2.removeAllItems();

                        setTheCheckboxes();
                    }
            }

            else{
                jLabel12.setText("Es gibt KEINEN/KEINE mit diesen Daten");
                jLabel12.setVisible(true);
            }
            }catch(Exception e){

            }
        }
        else{
            jLabel10.setText("*erforderlich");
            jLabel10.setVisible(true);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        jahrPlan = jLabel9.getText();
        monatPlan = (String)jComboBox1.getSelectedItem();
        monatAlsNummer = jComboBox1.getSelectedIndex() + 1;
        try {
            new Plan().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        
    }//GEN-LAST:event_jTextField2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainFrame().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    public static void displayTheCheckboxes(int i, int x, int y, int numberOfDaysInMonth, String day) throws Exception{
        JCheckBox jCheckBox;
        while(i <= numberOfDaysInMonth){
            
            jCheckBox = new JCheckBox(i + " (" + zahlVonHelfenden(i) + ")");                              
            jCheckBox.setBounds(x, y, 55, 55);
            jCheckBox.addActionListener(event -> {
                JCheckBox cb = (JCheckBox)event.getSource();
                if (!cb.isSelected()) {
                    jCheckBox32.setSelected(false);
                }
                if(jLabel12.getText().startsWith("Am") || jLabel12.getText().startsWith("Sie müssen")){                    
                    jLabel12.setVisible(false);
                }
            });
            
            jPanel2.add(jCheckBox);            
            jCheckBoxes.add(jCheckBox);
            
            String temp = "";
            if(i <= 9){
                temp = "0" + i;
            }
            else{
                temp = i + "";
            }
            int temp2 = jComboBox1.getSelectedIndex() + 1;
            
            planDatume.add(day + " " + temp + "." + temp2 + ".");
            
            x = x + 98;
            
            if(x == 312){
                i++;
                x = 18;
                y = y + 30;
            }
            switch(day){
                case "Montag":
                    day = "Mittwoch";
                    break;
                case "Mittwoch":
                    day = "Freitag";
                    break;
                default:
                    day = "Montag";
                    break;
            }
            i = i + 2;
        }        
    }
    
    public static String getSelectedMonth(int selectedIndex){
        String result = "";
        switch(selectedIndex){
            case 0:
                result = "01";
                break;
            case 1:
                result = "02";
                break;
            case 2:
                result = "03";
                break;
            case 3:
                result = "04";
                break;
            case 4:
                result = "05";
                break;
            case 5:
                result = "06";
                break;
            case 6:
                result = "07";
                break;
            case 7:
                result = "08";
                break;
            case 8:
                result = "09";
                break;
            case 9:
                result = "10";
                break;
            case 10:
                result = "11";
                break;
            default:
                result = "12";
                break;            
        }
        return result;
    }
    
    public static void setTheCheckboxes() throws Exception{
       
        jPanel2.removeAll();
        jPanel2.revalidate();
        jPanel2.repaint();
        
        jCheckBoxes = new ArrayList<>();  
        planDatume = new ArrayList<>();
        jCheckBox32.setSelected(false);
        
        LocalDate ld = LocalDate.parse(jLabel9.getText() + "-" + getSelectedMonth(jComboBox1.getSelectedIndex()) + "-01");            
        String day = ld.getDayOfWeek().toString();
        
        YearMonth yearMonthObject = YearMonth.of(Integer.parseInt(jLabel9.getText()), Integer.parseInt(getSelectedMonth(jComboBox1.getSelectedIndex())));
        int daysInMonth = yearMonthObject.lengthOfMonth();
        
        switch(day){
            case "MONDAY":
                displayTheCheckboxes(1, 18, 0, daysInMonth, "Montag");                    
                break;
            case "TUESDAY":
                displayTheCheckboxes(2, 116, 0, daysInMonth, "Mittwoch");
                break;
            case "WEDNESDAY":
                displayTheCheckboxes(1, 116, 0, daysInMonth, "Mittwoch");
                break;
            case "THURSDAY":
                displayTheCheckboxes(2, 214, 0, daysInMonth, "Freitag");
                break;
            case "FRIDAY":
                displayTheCheckboxes(1, 214, 0, daysInMonth, "Freitag");
                break;
            case "SATURDAY":       
                displayTheCheckboxes(3, 18, 0, daysInMonth, "Montag");
                break;
            default:
                displayTheCheckboxes(2, 18, 0, daysInMonth, "Montag");
                break;            
        }        
    }
    
    public static void getAllNamen(){
        try {                 
            allNamen = new ArrayList<>();
            String sql = "select name from helfende";            
            ResultSet rs = db.select(sql);
            
            while(rs.next()){
                allNamen.add(rs.getString("name"));
            }
        } catch (Exception ex) {
            Logger.getLogger(EditNamen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static int zahlVonHelfenden(int tag) throws Exception{
        int monat = jComboBox1.getSelectedIndex() + 1;
        String sql = "select tage from plan where jahr = " + Integer.parseInt(jLabel9.getText()) + " and monat = " + monat + "";
        ResultSet rs = db.select(sql);
        int count = 0;
        while(rs.next()){
            String[] ss = rs.getString("tage").split(",");
            for(int i = 0; i < ss.length; i++){
                if(tag == Integer.parseInt(ss[i])){
                    count++;
                    break;
                }
            }
        }
        
        return count;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private static javax.swing.JCheckBox jCheckBox32;
    private static javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private static javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private static javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private static javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
