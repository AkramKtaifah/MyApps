package GUI;


import Entities.*;
import Utilities.DatabaseOperations;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
import java.sql.*;
import java.text.*;
import java.util.logging.*;
import javax.swing.*;
import javax.swing.table.*;
import java.util.Date;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author AkramKutifah
 */
public class mainGUI extends javax.swing.JFrame {

    public static DatabaseOperations db = null;
    Process mysqlStart = null;
    Process mysqlStop = null;
    DefaultTableModel model = null, model2 = null, model4 = null, model6 = null, model7 = null, model8 = null, model9 = null;
    ArrayList<Project> projects = null;
    ArrayList<Employee> emps = null, test2 = null, names5 = null;
    ArrayList<DailySpend> dailyArr = null, test = null;
    ArrayList<Entities.ProjectDetail> test3 = null;
    ArrayList<BankData> test4 = null;
    
    DecimalFormat df = null, df2 = null;
    ProjectDetail pd = null;
    ProjectFirstStudy pt = null;
    OldData od = null;
    BankAccount bank = null;
    int counter = 0;
    String sDate = "", sDate2 = "";
    String eDate = "", eDate2 = "";
    int type = 0, type2 = 0;
    int panel = 0;
    
    
    
    public mainGUI() throws Exception {
        initComponents();
        
        try{
            db = new DatabaseOperations();
        }catch(Exception e){
            Runtime.getRuntime().exec("C:\\xampp\\mysql\\bin\\mysqld.exe");
            db = new DatabaseOperations();
        }
        
        projects = new ArrayList<>();
        emps = new ArrayList<>();
        names5 = new ArrayList<>();
        dailyArr = new ArrayList<>();
        test = new ArrayList<>();
        test2 = new ArrayList<>();
        test3 = new ArrayList<>();
        test4 = new ArrayList<>();
        
        df = new DecimalFormat("0.00");
        df.setGroupingUsed(true);
        df.setGroupingSize(3);
        df2 = new DecimalFormat("0");
        df2.setGroupingUsed(true);
        df2.setGroupingSize(3);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int i = 0; i < 6; i++){
            jTable1.getColumnModel().getColumn(i).setCellRenderer( centerRenderer );
            
            if(i <= 2){
                jTable12.getColumnModel().getColumn(i).setCellRenderer( centerRenderer );
                jTable13.getColumnModel().getColumn(i).setCellRenderer( centerRenderer );
                
                jTable9.getColumnModel().getColumn(i).setCellRenderer( centerRenderer );
                jTable11.getColumnModel().getColumn(i).setCellRenderer( centerRenderer );
                jTable8.getColumnModel().getColumn(i).setCellRenderer( centerRenderer );
                jTable1.getColumnModel().getColumn(i).setCellRenderer( new DecimalFormatRenderer2() );
            }
            if(i <= 3){
                jTable10.getColumnModel().getColumn(i).setCellRenderer( centerRenderer );
            }
            if(i == 1 || i == 2){
                jTable10.getColumnModel().getColumn(i).setCellRenderer( new DecimalFormatRenderer() );
            }
            
            
        }
        
        jTable8.getColumnModel().getColumn(1).setCellRenderer( new DecimalFormatRenderer2() );
        jTable9.getColumnModel().getColumn(1).setCellRenderer( new DecimalFormatRenderer2() );
        jTable11.getColumnModel().getColumn(1).setCellRenderer( new DecimalFormatRenderer2() );
        jTable12.getColumnModel().getColumn(1).setCellRenderer( new DecimalFormatRenderer2() );
        jTable13.getColumnModel().getColumn(1).setCellRenderer( new DecimalFormatRenderer2() );
        
        model = (DefaultTableModel) jTable1.getModel();
        model2 = (DefaultTableModel) jTable8.getModel();
        model4 = (DefaultTableModel) jTable10.getModel();
        model6 = (DefaultTableModel) jTable9.getModel();
        model7 = (DefaultTableModel) jTable11.getModel();
        model8 = (DefaultTableModel) jTable12.getModel();
        model9 = (DefaultTableModel) jTable13.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton6 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel34 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        jButton17 = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        jTextField27 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jButton18 = new javax.swing.JButton();
        jTextField23 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable10 = new javax.swing.JTable();
        jButton19 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable9 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        jTextField9 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTable12 = new javax.swing.JTable();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable13 = new javax.swing.JTable();
        jButton23 = new javax.swing.JButton();
        jTextField13 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel25 = new javax.swing.JLabel();
        jButton25 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("الوافي للأعمال الحديدية");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.RIGHT);
        jTabbedPane1.setAlignmentX(100.0F);
        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        jPanel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("رقم المشروع:");

        jLabel2.setFont(jLabel1.getFont());
        jLabel2.setText("صاحب المشروع (الزبون):");

        jLabel3.setFont(jLabel1.getFont());
        jLabel3.setText("الموقع:");

        jLabel8.setFont(jLabel1.getFont());
        jLabel8.setText("كمية الحديد اللازمة للمشروع:");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jTextField1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jTextField2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jTextField3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jTextField5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jTextField6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTable1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "الميزانية المبدئية", "كلفة الحديد", "كمية الحديد اللازمة", "الموقع", "الزبون", "رقم المشروع"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.Long.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(25);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(0, 153, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton1.setText("اضافة البيانات");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(jButton1.getBackground());
        jButton2.setFont(jButton1.getFont());
        jButton2.setText("حفظ التعديلات");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("كلفة الحديد للمشروع:");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel10.setForeground(java.awt.Color.red);
        jLabel10.setText("ادخال بيانات مشروع جديد");

        jLabel5.setFont(jLabel10.getFont());
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("بيانات المشاريع ");

        jLabel28.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 0, 0));
        jLabel28.setText("المعلومات الأساسية");

        jLabel29.setFont(jLabel28.getFont());
        jLabel29.setForeground(new java.awt.Color(255, 0, 0));
        jLabel29.setText("حساب كمية و كلفة الحديد للمشروع");

        jLabel4.setFont(jLabel1.getFont());
        jLabel4.setText("العرض:");

        jLabel30.setFont(jLabel1.getFont());
        jLabel30.setText("السماكة:");

        jLabel31.setFont(jLabel1.getFont());
        jLabel31.setText("عدد الأمتار الكلي:");

        jLabel32.setFont(jLabel1.getFont());
        jLabel32.setText("كلفة الكيلو غرام الواحد:");

        jTextField4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jTextField19.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jTextField20.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jTextField21.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jButton13.setBackground(jButton1.getBackground());
        jButton13.setFont(jButton1.getFont());
        jButton13.setText("حساب");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel33.setText("ميزانية المشروع المبدئية:");

        jTextField22.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel21.setText("م");

        jLabel35.setText("م");

        jLabel37.setText("ل.س");

        jLabel43.setText("ل.س");

        jLabel44.setText("ل.س");

        jLabel45.setText("كغ");

        jButton7.setBackground(new java.awt.Color(0, 153, 153));
        jButton7.setFont(jButton1.getFont());
        jButton7.setText("تهيئة");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 153, 153));
        jButton5.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton5.setText("دراسة مبدئية للمشروع");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setText("ملاحظات:");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jButton6.setBackground(new java.awt.Color(0, 153, 153));
        jButton6.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton6.setText("ملاحظات عن المشروع");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(0, 153, 153));
        jButton9.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton9.setText("سنة 2019");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton27.setBackground(new java.awt.Color(0, 153, 153));
        jButton27.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton27.setText("حذف مشروع");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator8))
                                .addContainerGap())
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel14))
                                .addGap(27, 27, 27))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(81, 81, 81)
                                    .addComponent(jLabel8))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel45)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel43)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField4)
                                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jTextField21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                        .addGap(199, 199, 199))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel28)))
                        .addGap(246, 246, 246))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(jLabel44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(78, 78, 78)
                                .addComponent(jLabel33)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jButton27))
                        .addGap(19, 19, 19)
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel28)
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30)
                            .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35)
                            .addComponent(jLabel45))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37)
                            .addComponent(jLabel43))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton13)
                            .addComponent(jButton7))
                        .addGap(39, 39, 39)))
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44))
                .addGap(31, 31, 31)
                .addComponent(jButton1)
                .addGap(40, 40, 40))
        );

        jTabbedPane1.addTab("المشاريع", jPanel1);

        jPanel7.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel7ComponentShown(evt);
            }
        });

        jComboBox2.setMaximumRowCount(100);
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "اختر أحد المشاريع" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel34.setText("أرقام المشاريع الموجودة:");

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel38.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 0, 0));
        jLabel38.setText("تفاصيل عن المشروع المحدد");

        jLabel39.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 0, 0));
        jLabel39.setText("ادخال المصاريف الخاصة بمشروع معين");

        jTable8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "التاريخ", "كمية المال", "التفاصيل"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable8.setRowHeight(25);
        jTable8.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable8.getTableHeader().setReorderingAllowed(false);
        jScrollPane8.setViewportView(jTable8);

        jButton17.setBackground(new java.awt.Color(0, 153, 153));
        jButton17.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton17.setText("اضافة البيانات");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(0, 153, 153));
        jLabel40.setText("اجمالي المصاريف:");

        jTextField27.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel42.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(0, 153, 153));
        jLabel42.setText("ميزانية المشروع المبدئية:");

        jButton18.setBackground(jButton1.getBackground());
        jButton18.setFont(jButton1.getFont());
        jButton18.setText("عرض المصاريف");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jTextField23.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jButton12.setBackground(jButton1.getBackground());
        jButton12.setFont(jButton1.getFont());
        jButton12.setText("تهيئة الجدول");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel47.setText("ل.س");

        jLabel48.setText("ل.س");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jLabel38))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel47)
                            .addComponent(jLabel48))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel40))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel42))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(jButton18)))
                .addGap(123, 123, 123)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jButton17)
                                .addGap(510, 510, 510)
                                .addComponent(jButton12))
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 91, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(jLabel34)
                                .addGap(260, 260, 260))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel39)
                                .addGap(299, 299, 299))))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator6)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addGap(77, 77, 77)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel42)
                                    .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel47))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel40)
                                    .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel48))
                                .addGap(77, 77, 77)
                                .addComponent(jButton18)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel39)
                                .addGap(80, 80, 80)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel34)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton17)
                                    .addComponent(jButton12))
                                .addGap(133, 133, 133)))))
                .addContainerGap())
        );

        jTabbedPane1.addTab("مصاريف المشاريع", jPanel7);

        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentShown(evt);
            }
        });

        jTable10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "التاريخ", "المبلغ المودع", "المبلغ المسحوب", "التفاصيل"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable10.setRowHeight(25);
        jTable10.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable10.getTableHeader().setReorderingAllowed(false);
        jScrollPane10.setViewportView(jTable10);

        jButton19.setBackground(new java.awt.Color(0, 153, 153));
        jButton19.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton19.setText("اضافة البيانات");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton15.setBackground(jButton1.getBackground());
        jButton15.setFont(jButton1.getFont());
        jButton15.setText("تهيئة الجدول");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 0, 0));
        jLabel15.setText("ادخال البيانات");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 153, 153));
        jLabel16.setText("الرصيد الحالي:");

        jTextField10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel17.setText("ل.س");

        jButton8.setBackground(new java.awt.Color(0, 153, 153));
        jButton8.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton8.setText("عرض التفاصيل");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(173, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jButton19)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8)
                            .addGap(382, 382, 382)
                            .addComponent(jButton15))
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 1115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(171, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(647, 647, 647))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel15)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton19)
                    .addComponent(jButton15)
                    .addComponent(jButton8))
                .addContainerGap(236, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("كشوف البنك", jPanel2);

        jPanel3.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel3ComponentShown(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("ادخال بيانات العمال");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("اسم العامل:");

        jTextField7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jButton3.setBackground(new java.awt.Color(0, 153, 153));
        jButton3.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton3.setText("اضافة");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "التاريخ", "كمية المال", "اسم العامل"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable9.setRowHeight(25);
        jTable9.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable9.getTableHeader().setReorderingAllowed(false);
        jScrollPane9.setViewportView(jTable9);

        jButton4.setBackground(new java.awt.Color(0, 153, 153));
        jButton4.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton4.setText("اضافة البيانات");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("اسم العامل:");

        jButton10.setBackground(new java.awt.Color(0, 153, 153));
        jButton10.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton10.setText("عرض");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jTable11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "التاريخ", "كمية المال", "اسم العامل"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable11.setRowHeight(25);
        jTable11.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable11.getTableHeader().setReorderingAllowed(false);
        jScrollPane11.setViewportView(jTable11);

        jButton11.setBackground(new java.awt.Color(0, 153, 153));
        jButton11.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton11.setText("حفظ التعديلات");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jTextField9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("من تاريخ:");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("الى تاريخ:");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setText("عرض البيانات");

        jButton14.setBackground(new java.awt.Color(0, 153, 153));
        jButton14.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton14.setText("عرض");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton16.setBackground(new java.awt.Color(0, 153, 153));
        jButton16.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton16.setText("حذف");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton24.setBackground(new java.awt.Color(0, 153, 153));
        jButton24.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jButton24.setText("تعديل");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton26.setBackground(new java.awt.Color(0, 153, 153));
        jButton26.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jButton26.setText("حذف");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jButton11)
                            .addGap(87, 87, 87)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jButton14)
                            .addGap(18, 18, 18)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel11)))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jButton10)
                            .addGap(219, 219, 219)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel18)
                                .addComponent(jLabel13))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12))
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addGap(236, 236, 236))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7))
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(63, 63, 63)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jButton10))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton14))
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton11)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton16)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(29, 29, 29)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton24)
                                .addComponent(jButton26)))))
                .addContainerGap(168, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1))
        );

        jTabbedPane1.addTab("أجور العمال", jPanel3);

        jPanel5.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel5ComponentShown(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setText("ادخال البيانات");

        jTable12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable12.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "التاريخ", "كمية المال", "التفاصيل"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable12.setRowHeight(25);
        jTable12.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable12.getTableHeader().setReorderingAllowed(false);
        jScrollPane12.setViewportView(jTable12);

        jButton21.setBackground(new java.awt.Color(0, 153, 153));
        jButton21.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton21.setText("اضافة البيانات");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setBackground(new java.awt.Color(0, 153, 153));
        jButton22.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton22.setText("عرض");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jTable13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable13.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "التاريخ", "كمية المال", "التفاصيل"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable13.setRowHeight(25);
        jTable13.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable13.getTableHeader().setReorderingAllowed(false);
        jScrollPane13.setViewportView(jTable13);

        jButton23.setBackground(new java.awt.Color(0, 153, 153));
        jButton23.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton23.setText("حفظ التعديلات");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jTextField13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel23.setText("من تاريخ:");

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel24.setText("الى تاريخ:");

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 0, 0));
        jLabel25.setText("عرض البيانات");

        jButton25.setBackground(new java.awt.Color(0, 153, 153));
        jButton25.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton25.setText("حذف");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton20.setBackground(new java.awt.Color(0, 153, 153));
        jButton20.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton20.setText("تهيئة الجدول");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton23)
                        .addGap(87, 87, 87)
                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jButton22)
                            .addGap(219, 219, 219)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel25)
                                .addComponent(jLabel24))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23))
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)
                        .addGap(236, 236, 236))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jButton21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton20))
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(63, 63, 63)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jButton22))
                        .addGap(79, 79, 79)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton23)
                            .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton25)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton21)
                            .addComponent(jButton20))))
                .addContainerGap(168, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator3))
        );

        jTabbedPane1.addTab("المصاريف اليومية", jPanel5);

        jScrollPane2.setViewportView(jTabbedPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            
            db.close();
                
            if(pd != null){
                pd.dispose();
            }
            if(pt != null){
                pt.dispose();
            }
            if(od != null){
                od.dispose();
            }
            if(bank != null){
                bank.dispose();
            }
        } catch (Exception ex) {
            Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jPanel5ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel5ComponentShown

        jTextField13.setEditable(false);
        if(model9.getRowCount() == 0){
            jButton23.setEnabled(false);
            jButton25.setEnabled(false);
        }
        else{
            jButton23.setEnabled(true);
            jButton25.setEnabled(true);
        }
        for(int row = 0; row < model8.getRowCount(); row++){
            model8.setValueAt(java.time.LocalDate.now(), row, 0);
        }
    }//GEN-LAST:event_jPanel5ComponentShown

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        initTable(2);
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        try{
            if(jTable13.getSelectedRow() >= 0){
                int choice = JOptionPane.showConfirmDialog(null, "هل أنت متأكد من هذه العملية؟", "تنبيه!!!", JOptionPane.YES_NO_OPTION);
                if(choice == JOptionPane.YES_OPTION){

                    String sql = "delete from dailyspend where id = " + dailyArr.get(jTable13.getSelectedRow()).getId() + "";
                    db.delete(sql);
                    panel = 2;

                    updateTable3(type2, "");

                    JOptionPane.showMessageDialog(null, "تمت عملية الحذف بنجاح");
                }

            }
            else{
                JOptionPane.showMessageDialog(null, "يجب أن تختار سطر من الجدول حتى تتم عملية الحذف وذلك عن طريق النقر بالفأرة على السطر المطلوب");
            }
        }catch(Exception e){}
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        try{
            if(model9.getRowCount() > 0){

                boolean state = false;
                int i = 0;
                for(int row = 0; row < model9.getRowCount(); row++){

                    state = false;

                    long amount = (Long)model9.getValueAt(row, 1);
                    String date = model9.getValueAt(row, 0).toString();
                    String details = model9.getValueAt(row, 2).toString();

                    if(date.matches("[0-9]{4}-[0-9]{2}-[0-9]{2}")){

                        if(!details.equals(dailyArr.get(row).getDetails())){
                            state = true;
                            i = 1;
                        }
                        else if(amount != dailyArr.get(row).getAmount()){
                            if(amount > 0){
                                state = true;
                                i = 1;
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "يجب أن تكون القيمة أكبر من الصفر");
                                model9.setValueAt(dailyArr.get(row).getAmount(), row, 1);
                                i = 0;
                                break;
                            }

                        }
                        else if(!date.equals(dailyArr.get(row).getDate())){
                            state = true;
                            i = 1;
                        }

                        if(state){
                            String sql = "update dailyspend set details = '" + details + "', amount = " + amount + ", date = '" + date + "' where id = " + dailyArr.get(row).getId() + "";

                            try {
                                db.update(sql);
                            } catch (SQLException ex) {
                                Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "قيمة حقل التاريخ يجب أن تكون على الشكل التالي YYYY-MM-DD");
                        model9.setValueAt(dailyArr.get(row).getDate(), row, 0);
                        i = 0;
                        break;
                    }
                }
                if(i != 0){
                    JOptionPane.showMessageDialog(null, "تمت عملية التعديل بنجاح");
                    panel = 2;
                    updateTable3(type2, "");

                }

            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "لايمكن أن يكون هناك خلية رقمية فارغة في الجدول");
            panel = 2;
            updateTable3(type2, "");
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        try{
            if(jXDatePicker3.getDate() != null && jXDatePicker4.getDate() != null){
                Date startDate = jXDatePicker3.getDate();
                Date endDate = jXDatePicker4.getDate();

                int startYear = startDate.getYear();
                int endYear = endDate.getYear();

                int startMonth = startDate.getMonth() + 1;
                int endMonth = endDate.getMonth() + 1;

                if(startYear <= endYear){
                    if(startMonth <= endMonth){

                        String startMonthStr = "";
                        String endMonthStr = "";
                        if(startMonth < 10){
                            startMonthStr = "0" + startMonth;
                        }
                        else{
                            startMonthStr = startMonth + "";
                        }
                        if(endMonth < 10){
                            endMonthStr = "0" + endMonth;
                        }
                        else{
                            endMonthStr = endMonth + "";
                        }

                        String sd = startDate.toString();
                        String[] dd = sd.split(" ");

                        String ed = endDate.toString();
                        String[] dd2 = ed.split(" ");

                        if(Integer.parseInt(dd[2]) <= Integer.parseInt(dd2[2])){
                            sDate2 = dd[5] + "-" + startMonthStr + "-" + dd[2];
                            eDate2 = dd2[5] + "-" + endMonthStr + "-" + dd2[2];
                            type2 = 1;
                            panel = 2;
                            updateTable3(type2, "");
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "يجب أن يكون تاريخ البداية أصغر أو يساوي تاريخ النهاية");
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "يجب أن يكون تاريخ البداية أصغر أو يساوي تاريخ النهاية");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "يجب أن يكون تاريخ البداية أصغر أو يساوي تاريخ النهاية");
                }

            }
            else{
                JOptionPane.showMessageDialog(null, "يجب أن يكون حقلي التواريخ ممتلئان");
            }
        }catch(Exception e){

        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jXDatePicker4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jXDatePicker4ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        test = new ArrayList<>();
        boolean state = false;
        int i = 0;
        int counter2 = 0;

        for(int row = 0; row < model8.getRowCount(); row++){
            if(model8.getValueAt(row, 1) != null && model8.getValueAt(row, 2) != null && !model8.getValueAt(row, 2).equals("") && !model8.getValueAt(row, 2).toString().matches("[ ]+")){
                if((Long)model8.getValueAt(row, 1) > 0){

                    long amount = (Long)model8.getValueAt(row, 1);
                    String details = model8.getValueAt(row, 2).toString();
                    String date = model8.getValueAt(row, 0).toString();

                    if(date.matches("[0-9]{4}-[0-9]{2}-[0-9]{2}")){
                        state = true;
                        test.add(new DailySpend(++counter2, details, date, amount));

                    }
                    else{
                        JOptionPane.showMessageDialog(null, "قيمة حقل التاريخ يجب أن تكون على الشكل التالي YYYY-MM-DD");
                        model8.setValueAt(java.time.LocalDate.now().toString(), row, 0);
                        i = 1;
                        break;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "يجب أن تكون القيمة أكبر من الصفر");
                    model8.setValueAt(null, row, 1);
                    i = 1;
                    break;
                }

            }

        }
        if(!state){
            if(i == 0){
                JOptionPane.showMessageDialog(null, "لايوجد قيم لاضافتها حيث يجب أن يكون السطر ممتلئ بقيمة الحقلين معا");
            }
        }
        else{
            if(i == 0){
                if(test.size() > 0){
                    for(DailySpend ds : test){
                        String sql = "insert into dailyspend (details, amount, date) values ('" + ds.getDetails() + "', " + ds.getAmount() + ", '" + ds.getDate() + "')";
                        try {
                            db.insert(sql);
                        } catch (SQLException ex) {
                            Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                    JOptionPane.showMessageDialog(null, "تمت عملية الاضافة بنجاح");
                    initTable(2);
                }
            }
        }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jPanel3ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel3ComponentShown
        jButton4.setEnabled(false);
        jButton24.setEnabled(false);
        jButton26.setEnabled(false);
        jTextField9.setEditable(false);
        jTextField7.setText("");
        if(model7.getRowCount() == 0){
            jButton11.setEnabled(false);
            jButton16.setEnabled(false);
        }
        else{
            jButton11.setEnabled(true);
            jButton16.setEnabled(true);
        }
        updateTable2();
    }//GEN-LAST:event_jPanel3ComponentShown

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        try{
            if(jTable9.getSelectedRow() >= 0){
                int choice = JOptionPane.showConfirmDialog(null, "هل أنت متأكد من حذف هذا العامل حيث أنه سيتم حذف جميع البيانات الخاصة به؟", "تنبيه!!!", JOptionPane.YES_NO_OPTION);
                if(choice == JOptionPane.YES_OPTION){

                    String sql = "delete from employeenames where id = " + names5.get(jTable9.getSelectedRow()).getId() + "";
                    db.delete(sql);
                    sql = "delete from employee where name = '" + names5.get(jTable9.getSelectedRow()).getName()+ "'";
                    db.delete(sql);
                    updateTable2();
                    if(model7.getRowCount() > 0){
                        panel = 1;
                        if(type == 1){
                            updateTable3(type, "");
                        }
                        else{
                            updateTable3(type, jTextField8.getText());
                        }
                    }
                    JOptionPane.showMessageDialog(null, "تمت عملية حذف العامل بنجاح");
                }

            }
            else{
                JOptionPane.showMessageDialog(null, "يجب أن تختار عامل من الجدول حتى تتم عملية الحذف وذلك عن طريق النقر بالفأرة على العامل المطلوب");
            }
        }catch(Exception e){}
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        try{
            if(jTable9.getSelectedRow() >= 0){
                String name = JOptionPane.showInputDialog(null, "اكتب الاسم الجديد لهذا العامل");
                if(name != null){
                    if(!name.equals("") && !name.matches("[ ]+")){
                        String sql = "update employeenames set name = '" + name + "' where id = " + names5.get(jTable9.getSelectedRow()).getId()+ "";
                        db.update(sql);
                        sql = "update employee set name = '" + name + "' where name = '" + names5.get(jTable9.getSelectedRow()).getName() + "'";
                        db.update(sql);
                        updateTable2();
                        if(model7.getRowCount() > 0){
                            panel = 1;
                            if(type == 1){
                                updateTable3(type, "");
                            }
                            else{
                                updateTable3(type, jTextField8.getText());
                            }
                        }
                        JOptionPane.showMessageDialog(null, "تمت عملية تعديل اسم العامل بنجاح");

                    }
                    else{
                        JOptionPane.showMessageDialog(null, "لا يمكن أن يكون اسم العامل فارغ");
                    }
                }

            }
            else{
                JOptionPane.showMessageDialog(null, "يجب أن تختار عامل من الجدول حتى تتم عملية التعديل وذلك عن طريق النقر بالفأرة على العامل المطلوب");
            }
        }catch(Exception e){}
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        try{
            if(jTable11.getSelectedRow() >= 0){
                int choice = JOptionPane.showConfirmDialog(null, "هل أنت متأكد من هذه العملية؟", "تنبيه!!!", JOptionPane.YES_NO_OPTION);
                if(choice == JOptionPane.YES_OPTION){

                    String sql = "delete from employee where id = " + emps.get(jTable11.getSelectedRow()).getId() + "";
                    db.delete(sql);
                    panel = 1;
                    if(type == 1){
                        updateTable3(type, "");
                    }
                    else{
                        updateTable3(type, jTextField8.getText());
                    }
                    JOptionPane.showMessageDialog(null, "تمت عملية الحذف بنجاح");
                }

            }
            else{
                JOptionPane.showMessageDialog(null, "يجب أن تختار سطر من الجدول حتى تتم عملية الحذف وذلك عن طريق النقر بالفأرة على السطر المطلوب");
            }
        }catch(Exception e){}
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        try{
            String name = jTextField8.getText();
            if(!name.equals("") && !name.matches("[ ]+")){
                type = 2;
                panel = 1;
                updateTable3(type, name);
            }
            else{
                JOptionPane.showMessageDialog(null, "يجب أن يكون حقل اسم العامل ممتلئ");
            }
        }catch(Exception e){

        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        try{
            if(model7.getRowCount() > 0){

                boolean state = false;
                int i = 0;
                for(int row = 0; row < model7.getRowCount(); row++){

                    state = false;

                    long amount = (Long)model7.getValueAt(row, 1);
                    String date = model7.getValueAt(row, 0).toString();

                    if(date.matches("[0-9]{4}-[0-9]{2}-[0-9]{2}")){

                        if(amount != emps.get(row).getAmount()){
                            if(amount > 0){
                                state = true;
                                i = 1;
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "يجب أن تكون القيمة أكبر من الصفر");
                                model7.setValueAt(emps.get(row).getAmount(), row, 1);
                                i = 0;
                                break;
                            }

                        }

                        else if(!date.equals(emps.get(row).getDate())){
                            state = true;
                            i = 1;
                        }

                        if(state){
                            String sql = "update employee set amount = " + amount + ", date = '" + date + "' where id = " + emps.get(row).getId() + "";

                            try {
                                db.update(sql);
                            } catch (SQLException ex) {
                                Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "قيمة حقل التاريخ يجب أن تكون على الشكل التالي YYYY-MM-DD");
                        model7.setValueAt(emps.get(row).getDate(), row, 0);
                        i = 0;
                        break;
                    }
                }
                if(i != 0){
                    JOptionPane.showMessageDialog(null, "تمت عملية التعديل بنجاح");
                    panel = 1;
                    if(type == 1){
                        updateTable3(type, "");
                    }
                    else{
                        updateTable3(type, jTextField8.getText());
                    }
                }

            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "لايمكن أن يكون هناك خلية رقمية فارغة في الجدول");
            panel = 1;
            if(type == 1){
                updateTable3(type, "");
            }
            else{
                updateTable3(type, jTextField8.getText());
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        try{
            if(jXDatePicker1.getDate() != null && jXDatePicker2.getDate() != null){
                Date startDate = jXDatePicker1.getDate();
                Date endDate = jXDatePicker2.getDate();

                int startYear = startDate.getYear();
                int endYear = endDate.getYear();

                int startMonth = startDate.getMonth() + 1;
                int endMonth = endDate.getMonth() + 1;

                if(startYear <= endYear){
                    if(startMonth <= endMonth){

                        String startMonthStr = "";
                        String endMonthStr = "";
                        if(startMonth < 10){
                            startMonthStr = "0" + startMonth;
                        }
                        else{
                            startMonthStr = startMonth + "";
                        }
                        if(endMonth < 10){
                            endMonthStr = "0" + endMonth;
                        }
                        else{
                            endMonthStr = endMonth + "";
                        }

                        String sd = startDate.toString();
                        String[] dd = sd.split(" ");

                        String ed = endDate.toString();
                        String[] dd2 = ed.split(" ");

                        if(Integer.parseInt(dd[2]) <= Integer.parseInt(dd2[2])){
                            sDate = dd[5] + "-" + startMonthStr + "-" + dd[2];
                            eDate = dd2[5] + "-" + endMonthStr + "-" + dd2[2];
                            type = 1;
                            panel = 1;
                            updateTable3(type, "");
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "يجب أن يكون تاريخ البداية أصغر أو يساوي تاريخ النهاية");
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "يجب أن يكون تاريخ البداية أصغر أو يساوي تاريخ النهاية");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "يجب أن يكون تاريخ البداية أصغر أو يساوي تاريخ النهاية");
                }

            }
            else{
                JOptionPane.showMessageDialog(null, "يجب أن يكون حقلي التواريخ ممتلئان");
            }
        }catch(Exception e){

        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jXDatePicker2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jXDatePicker2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        test2 = new ArrayList<>();
        boolean state = false;
        int i = 0;
        int counter3 = 0;

        for(int row = 0; row < model6.getRowCount(); row++){
            if(model6.getValueAt(row, 1) != null){
                state = true;
                if((Long)model6.getValueAt(row, 1) > 0){

                    long amount = (Long)model6.getValueAt(row, 1);
                    String name = model6.getValueAt(row, 2).toString();
                    String date = model6.getValueAt(row, 0).toString();

                    if(date.matches("[0-9]{4}-[0-9]{2}-[0-9]{2}")){

                        test2.add(new Employee(++counter3, name, amount, date));
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "قيمة حقل التاريخ يجب أن تكون على الشكل التالي YYYY-MM-DD");
                        model6.setValueAt(java.time.LocalDate.now().toString(), row, 0);
                        i = 1;
                        break;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "يجب أن تكون كمية المال أكبر من الصفر");
                    model6.setValueAt(null, row, 1);
                    i = 1;
                    break;
                }

            }
        }
        if(!state){
            JOptionPane.showMessageDialog(null, "لايوجد قيم لاضافتها");
        }
        else{
            if(i == 0){
                if(test2.size() > 0){
                    for(Employee e : test2){
                        String sql = "insert into employee (name, amount, date) values ('" + e.getName() + "', " + e.getAmount() + ", '" + e.getDate() + "')";
                        try {
                            db.insert(sql);
                        } catch (SQLException ex) {
                            Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    JOptionPane.showMessageDialog(null, "تمت عملية الاضافة بنجاح");
                    initTable3();

                }
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try{
            String name = jTextField7.getText();
            if(!name.equals("") && !name.matches("[ ]+")){
                String sql = "select * from employeenames where name = '" + name + "'";
                ResultSet rs = db.select(sql);

                if(rs.next()){
                    JOptionPane.showMessageDialog(null, "اسم العامل موجود مسبقا، يرجى اختيار اسم اخر");
                }
                else{
                    String sql2 = "insert into employeenames(name) values('" + name + "')";
                    db.insert(sql2);
                    updateTable2();
                    jTextField7.setText("");
                }

            }
            else{
                JOptionPane.showMessageDialog(null, "يجب أن يكون حقل اسم العامل ممتلئ");
            }
        }catch(Exception e){

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jPanel2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel2ComponentShown
        try{
            jTextField10.setEditable(false);

            double balance = 0;
            boolean state = false;
            String sql2 = "select balance from bank";
            ResultSet rs2 = db.select(sql2);

            while(rs2.next()){
                state = true;
                balance = rs2.getDouble("balance");
            }

            jTextField10.setText(df.format(balance) + "");

            if(!state){
                jButton8.setEnabled(false);
            }
            else{
                jButton8.setEnabled(true);
            }

            for(int row = 0; row < model4.getRowCount(); row++){
                model4.setValueAt(java.time.LocalDate.now().toString(), row, 0);
            }
        }catch(Exception e){

        }
    }//GEN-LAST:event_jPanel2ComponentShown

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        bank = new BankAccount();
        bank.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        initTable2();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        try {
            test4 = new ArrayList<>();
            boolean state = false;
            int i = 0;
            int counter4 = 0;

            double balance = 0;
            String sql2 = "select balance from bank";
            ResultSet rs2 = db.select(sql2);
            while(rs2.next()){
                balance = rs2.getDouble("balance");
            }

            for(int row = 0; row < model4.getRowCount(); row++){
                if((model4.getValueAt(row, 1) != null && (Double)model4.getValueAt(row, 1) > 0 && (model4.getValueAt(row, 2) == null || (Double)model4.getValueAt(row, 2) == 0)) || (model4.getValueAt(row, 2) != null && (Double)model4.getValueAt(row, 2) > 0 && (model4.getValueAt(row, 1) == null || (Double)model4.getValueAt(row, 1) == 0))){
                    if(model4.getValueAt(row, 3) != null && !model4.getValueAt(row, 3).equals("") && !model4.getValueAt(row, 3).toString().matches("[ ]+")){
                        state = true;
                        double withdraw = 0;
                        double deposit = 0;

                        if(model4.getValueAt(row, 1) != null){
                            deposit = (Double)model4.getValueAt(row, 1);
                            balance = balance + deposit;
                        }

                        if(model4.getValueAt(row, 2) != null){
                            withdraw = (Double)model4.getValueAt(row, 2);
                            if(balance >= withdraw){
                                balance = balance - withdraw;
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "لايوجد رصيد كافي في الحساب لسحب هذا المبلغ");
                                model4.setValueAt(balance, row, 2);
                                i = 1;
                                break;
                            }
                        }

                        String details = model4.getValueAt(row, 3).toString();
                        String date = model4.getValueAt(row, 0).toString();

                        if(date.matches("[0-9]{4}-[0-9]{2}-[0-9]{2}")){
                            test4.add(new BankData(++counter4, details, withdraw, deposit, date, balance));

                        }
                        else{
                            JOptionPane.showMessageDialog(null, "قيمة حقل التاريخ يجب أن تكون على الشكل التالي YYYY-MM-DD");
                            model4.setValueAt(java.time.LocalDate.now(), row, 0);
                            i = 1;
                            break;
                        }
                    }

                }

            }
            if(!state){
                JOptionPane.showMessageDialog(null, "هناك خطأ في الادخال حيث يجب أن يكون حقل (التفاصيل) ممتلئ" + "\n" + "أما بالنسبة للحقلين (المبلغ المودع-المبلغ المسحوب) يجب أن تكون قيمة أحدهما ممتلئة و أكبر من الصفر وبالمقابل يجب أن تكون قيمة الحقل الاخر فارغة أو مساوية للصفر" + "\n" + "أي أن كل سطر يجب أن يحتوي على عملية واحدة فقط اما تحويل الى الحساب أو سحب من الحساب ");
            }
            else{
                if(i == 0){
                    if(test4.size() > 0){
                        for(BankData b : test4){
                            String sql = "insert into bank (details, withdraw, deposit, date, balance) values ('" + b.getDetails() + "', " + b.getWithdraw() + ", " + b.getDeposit() + ", '" + b.getDate() + "', " + b.getBalance() + ")";
                            db.insert(sql);
                        }
                        JOptionPane.showMessageDialog(null, "تمت عملية الاضافة بنجاح");
                        initTable2();
                        jTextField10.setText(df.format(balance) + "");
                        jButton8.setEnabled(true);
                    }
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jPanel7ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel7ComponentShown
        jTextField23.setEditable(false);
        jTextField27.setEditable(false);

        jTextField23.setText("");
        jTextField27.setText("");

        jButton17.setEnabled(false);
        jButton18.setEnabled(false);

        for(int row = 0; row < model2.getRowCount(); row++){
            model2.setValueAt(java.time.LocalDate.now().toString(), row, 0);
        }

        if(model.getRowCount() > 0){
            for(int u = 0; u < jComboBox2.getActionListeners().length; u++){
                jComboBox2.removeActionListener(jComboBox2.getActionListeners()[u]);
            }
            jComboBox2.removeAllItems();
            jComboBox2.addItem("اختر أحد المشاريع");

            jButton18.setEnabled(true);

            String sql = "select id from projects order by id";
            try {
                ResultSet rs = db.select(sql);
                while(rs.next()){
                    jComboBox2.addItem(rs.getLong("id") + "");
                }

            } catch (Exception ex) {

            }
            jComboBox2.setEnabled(true);
            jComboBox2.setSelectedIndex(0);

            jComboBox2.addActionListener (new ActionListener () {

                @Override
                public void actionPerformed(ActionEvent e) {
                    try {
                        int id;
                        if(jComboBox2.getSelectedIndex() != 0){

                            jButton17.setEnabled(true);

                            id = Integer.parseInt(jComboBox2.getSelectedItem().toString());
                            String sql2 = "select budget from projects where id = " + id + "";
                            ResultSet rs2 = db.select(sql2);
                            while(rs2.next()){
                                jTextField23.setText(df2.format(rs2.getLong("budget")) + "");

                            }
                            String sql3 = "select sum(amount) as sum from projectdetails where projectID = " + id + "";
                            ResultSet rs3 = db.select(sql3);

                            while(rs3.next()){
                                jTextField27.setText(df2.format(rs3.getLong("sum")) + "");
                            }

                        }
                        else{
                            jTextField23.setText("");
                            jTextField27.setText("");
                            jButton17.setEnabled(false);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });

        }
        else{
            jComboBox2.setEnabled(false);
        }
    }//GEN-LAST:event_jPanel7ComponentShown

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        initTable(1);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        pd = new ProjectDetail();
        pd.setVisible(true);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed

        long proID = Long.parseLong(jComboBox2.getSelectedItem().toString());
        test3 = new ArrayList<>();
        boolean state = false;
        int i = 0;
        int counter7 = 0;
        long sum = 0;

        for(int row = 0; row < model2.getRowCount(); row++){
            if(model2.getValueAt(row, 1) != null && model2.getValueAt(row, 2) != null && !model2.getValueAt(row, 2).equals("") && !model2.getValueAt(row, 2).toString().matches("[ ]+")){
                if((Long)model2.getValueAt(row, 1) > 0){

                    long amount = (Long)model2.getValueAt(row, 1);
                    String details = model2.getValueAt(row, 2).toString();
                    String date = model2.getValueAt(row, 0).toString();

                    if(date.matches("[0-9]{4}-[0-9]{2}-[0-9]{2}")){
                        state = true;
                        sum += amount;
                        test3.add(new Entities.ProjectDetail(++counter7, details, amount, date));

                    }
                    else{
                        JOptionPane.showMessageDialog(null, "قيمة حقل التاريخ يجب أن تكون على الشكل التالي YYYY-MM-DD");
                        model2.setValueAt(java.time.LocalDate.now().toString(), row, 0);
                        i = 1;
                        break;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "يجب أن تكون القيمة أكبر من الصفر");
                    model2.setValueAt(null, row, 1);
                    i = 1;
                    break;
                }
            }

        }
        if(!state){
            if(i == 0){
                JOptionPane.showMessageDialog(null, "لايوجد قيم لاضافتها حيث يجب أن يكون السطر ممتلئ بقيمة الحقلين معا");
            }
        }
        else{
            if(i == 0){
                if(test3.size() > 0){
                    for(Entities.ProjectDetail p : test3){
                        String sql = "insert into projectdetails (details, amount, date, projectID) values ('" + p.getDetails() + "', " + p.getAmount() + ", '" + p.getDate() + "', " + proID + ")";
                        try {
                            db.insert(sql);
                        } catch (SQLException ex) {
                            Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    JOptionPane.showMessageDialog(null, "تمت عملية الاضافة بنجاح");
                    initTable(1);
                    long temp = Long.parseLong(casting(jTextField27.getText()));
                    long total = temp + sum;
                    jTextField27.setText(df2.format(total) + "");
                }
            }
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown
        jTextField5.setEditable(false);
        jTextField6.setEditable(false);

        if(model.getRowCount() == 0){
            try {
                String sql = "select * from projects order by id";
                ResultSet rs = db.select(sql);

                while(rs.next()){
                    long id = rs.getLong("id");
                    String customer = rs.getString("customer");
                    String location = rs.getString("location");;
                    long ironAmount = rs.getLong("ironAmount");
                    long ironCost = rs.getLong("ironCost");
                    long budget = rs.getLong("budget");

                    model.addRow(new Object[]{budget, ironCost, ironAmount, location, customer, id});
                    projects.add(new Project(rs.getLong("id"), rs.getString("customer"), rs.getString("location"), rs.getString("notes"), rs.getLong("ironAmount"), rs.getLong("ironCost"), rs.getLong("budget")));

                }
            } catch (SQLException ex) {
                Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(model.getRowCount() > 0){
                jButton2.setEnabled(true);
                jButton27.setEnabled(true);
                jButton5.setEnabled(true);
                jButton6.setEnabled(true);
            }
            else{
                jButton2.setEnabled(false);
                jButton27.setEnabled(false);
                jButton5.setEnabled(false);
                jButton6.setEnabled(false);
            }
            model.fireTableDataChanged();
            jTable1.setModel(model);

        }
    }//GEN-LAST:event_jPanel1ComponentShown

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        try{
            if(jTable1.getSelectedRow() >= 0){
                int choice = JOptionPane.showConfirmDialog(null, "هل أنت متأكد من حذف هذا المشروع حيث أنه سيتم حذف جميع البيانات الخاصة به؟", "تنبيه!!!", JOptionPane.YES_NO_OPTION);
                if(choice == JOptionPane.YES_OPTION){

                    String sql = "delete from projects where id = " + projects.get(jTable1.getSelectedRow()).getId() + "";
                    db.delete(sql);
                    sql = "delete from projectdetails where projectID = " + projects.get(jTable1.getSelectedRow()).getId() + "";
                    db.delete(sql);
                    updateTable();
                    JOptionPane.showMessageDialog(null, "تمت عملية حذف المشروع بنجاح");
                }

            }
            else{
                JOptionPane.showMessageDialog(null, "يجب أن تختار مشروع من الجدول حتى تتم عملية الحذف وذلك عن طريق النقر بالفأرة على المشروع المطلوب");
            }
        }catch(Exception e){}
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        od = new OldData();
        od.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            if(jTable1.getSelectedRow() >= 0){
                if(projects.get(jTable1.getSelectedRow()).getNotes().equals("") || projects.get(jTable1.getSelectedRow()).getNotes().matches("[ ]+")){
                    String notes = JOptionPane.showInputDialog("لايوجد ملاحظات لهذا المشروع" + "\n" + "اكتب ما تريد");
                    if(notes != null){
                        if(!notes.equals("") && !notes.matches("[ ]+")){
                            String sql = "update projects set notes = '" + notes + "' where id = " + projects.get(jTable1.getSelectedRow()).getId() + "";
                            db.update(sql);
                            projects.get(jTable1.getSelectedRow()).setNotes(notes);
                        }
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, projects.get(jTable1.getSelectedRow()).getNotes());
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "يجب أن تختار مشروع من الجدول وذلك بالنقر عليه بالفأرة");
            }
        }catch(Exception e){}
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            if(jTable1.getSelectedRow() >= 0){
                pt = new ProjectFirstStudy(projects.get(jTable1.getSelectedRow()).getId(), projects.get(jTable1.getSelectedRow()).getBudget());
                pt.setVisible(true);
            }
            else{
                JOptionPane.showMessageDialog(null, "يجب أن تختار مشروع من الجدول وذلك بالنقر عليه بالفأرة");
            }
        }catch(Exception e){}
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField19.setText("");
        jTextField20.setText("");
        jTextField21.setText("");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        try{
            if (("".equals(jTextField4.getText())) || ("".equals(jTextField19.getText())) || ("".equals(jTextField20.getText())) || ("".equals(jTextField21.getText()))){
                JOptionPane.showMessageDialog(null, "يجب أن تكون جميع الحقول الخاصة بهذا الحساب ممتلئة");
            }

            else if((jTextField4.getText().matches("[ ]+")) || (jTextField19.getText().matches("[ ]+")) || (jTextField20.getText().matches("[ ]+")) || (jTextField21.getText().matches("[ ]+"))){
                JOptionPane.showMessageDialog(null, "يجب أن تكون جميع الحقول الخاصة بهذا الحساب ممتلئة");
            }

            else{
                double width = Double.parseDouble(jTextField4.getText());
                double height = Double.parseDouble(jTextField19.getText());
                double meterNum = Double.parseDouble(jTextField20.getText());
                double meterCost = Double.parseDouble(jTextField21.getText());

                if((width <= 0) || (height <= 0) || (meterNum <= 0) || (meterCost <= 0)){
                    JOptionPane.showMessageDialog(null, "يجب أن تكون جميع الحقول الخاصة بهذا الحساب أكبر من الصفر");
                }
                else{

                    double ironAmount = width * 1 * height * 7785 * meterNum;
                    double ironCost = ironAmount * meterCost;
                    jTextField5.setText(df.format(ironAmount) + "");
                    jTextField6.setText(df.format(ironCost) + "");
                }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "يجب أن تكون جميع الحقول الخاصة بهذا الحساب رقمية");
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            if(model.getRowCount() > 0){

                boolean state = false;
                int i = 0;

                for(int row = 0; row < model.getRowCount(); row++){

                    state = false;

                    long id = (Long)model.getValueAt(row, 5);
                    String customer = model.getValueAt(row, 4).toString();
                    String location = model.getValueAt(row, 3).toString();
                    long ironAmount = (Long)model.getValueAt(row, 2);
                    long ironCost = (Long)model.getValueAt(row, 1);
                    long budget = (Long)model.getValueAt(row, 0);

                    if(!customer.equals(projects.get(row).getCustomer())){
                        state = true;
                        i = 1;
                    }

                    else if(!location.equals(projects.get(row).getLocation())){
                        state = true;
                        i = 1;
                    }

                    else if(ironAmount != projects.get(row).getIronAmount()){
                        if(ironAmount >= 0){
                            state = true;
                            i = 1;
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "يجب أن تكون القيمة أكبر من الصفر");
                            model.setValueAt(projects.get(row).getIronAmount(), row, 2);
                            i = 0;
                            break;
                        }
                    }

                    else if(ironCost != projects.get(row).getIronCost()){
                        if(ironCost >= 0){
                            state = true;
                            i = 1;
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "يجب أن تكون القيمة أكبر من الصفر");
                            model.setValueAt(projects.get(row).getIronCost(), row, 1);
                            i = 0;
                            break;
                        }
                    }

                    else if(budget != projects.get(row).getBudget()){
                        if(budget >= 0){
                            state = true;
                            i = 1;
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "يجب أن تكون القيمة أكبر من الصفر");
                            model.setValueAt(projects.get(row).getBudget(), row, 0);
                            i = 0;
                            break;
                        }
                    }

                    if(state){
                        String sql = "update projects set customer = '" + customer + "', location = '" + location + "', ironAmount = " + ironAmount + ", ironCost = " + ironCost+ ", budget = " + budget + " where id = " + id + "";

                        try {
                            db.update(sql);
                        } catch (SQLException ex) {
                            Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }

                }
                if(i != 0){
                    JOptionPane.showMessageDialog(null, "تمت عملية التعديل بنجاح");
                    updateTable();
                }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "لايمكن أن يكون هناك خلية رقمية فارغة في الجدول");
            updateTable();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            if (("".equals(jTextField1.getText())) || ("".equals(jTextField2.getText())) || ("".equals(jTextField3.getText()))){
                JOptionPane.showMessageDialog(null, "حقول المعلومات الأساسية يجب أن تكون جميعها ممتلئة ما عدا حقل الملاحظات فهو خياري");
            }

            else if((jTextField1.getText().matches("[ ]+")) || (jTextField2.getText().matches("[ ]+")) || (jTextField3.getText().matches("[ ]+"))){
                JOptionPane.showMessageDialog(null, "حقول المعلومات الأساسية يجب أن تكون جميعها ممتلئة ما عدا حقل الملاحظات فهو خياري");
            }

            else{
                long projectID = Long.parseLong(jTextField1.getText());
                String customer = jTextField2.getText();
                String location = jTextField3.getText();
                String notes = jTextArea1.getText();

                double ironAmount;
                double ironCost;
                long projectBudget;

                if (jTextField5.getText().equals("") || jTextField5.getText().matches("[ ]+")){
                    ironAmount = 0;
                    ironCost = 0;
                }
                else{
                    ironAmount = Math.ceil(Double.parseDouble(casting(jTextField5.getText())));
                    ironCost = Math.ceil(ironAmount * Double.parseDouble(casting(jTextField21.getText())));
                }

                if (jTextField22.getText().equals("") || jTextField22.getText().matches("[ ]+"))
                projectBudget = 0;
                else
                projectBudget = Long.parseLong(jTextField22.getText());

                if((projectID < 1) || (ironAmount < 0) || (ironCost < 0) || (projectBudget < 0)){
                    JOptionPane.showMessageDialog(null, "يجب أن تكون قيم الحقول الرقمية أكبر من الصفر");
                }
                else{

                    String sql = "select * from projects where id = " + projectID + "";
                    ResultSet rs = db.select(sql);
                    if(rs.next()){
                        JOptionPane.showMessageDialog(null, "رقم المشروع موجود مسبقا، يرجى ادخال رقم آخر");
                        jTextField1.setText("");
                    }

                    else{

                        sql = "insert into projects values (" + projectID + ", '" + customer + "', '" + location + "', '" + notes + "', " + (long)ironAmount + ", " + (long)ironCost + ", " + projectBudget + ")";

                        db.insert(sql);
                        JOptionPane.showMessageDialog(null, "تمت عملية اضافة المشروع بنجاح");
                        jTextField1.setText("");
                        jTextField2.setText("");
                        jTextField3.setText("");
                        jTextArea1.setText("");
                        jTextField22.setText("");
                        jTextField5.setText("");
                        jTextField6.setText("");

                        updateTable();
                        jButton2.setEnabled(true);
                        jButton27.setEnabled(true);
                        jButton5.setEnabled(true);
                        jButton6.setEnabled(true);
                    }
                }
            }

        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "هناك خطأ في قيم الحقول الرقمية علماً أن قيمة حقل (رقم المشروع) يجب أن تكون رقم صحيح أما في بقية الحقول الرقمية يمكن أن تكون القيم أرقام صحيحة أو عشرية");
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    JFrame f = new mainGUI();
                    f.setExtendedState(JFrame.MAXIMIZED_BOTH); 
                    f.setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    public void updateTable(){
        projects = new ArrayList<>();
        model.setRowCount(0);
        try {
            String sql = "select * from projects order by id";
            ResultSet rs = db.select(sql);

            while(rs.next()){
                long id = rs.getLong("id");
                String customer = rs.getString("customer");
                String location = rs.getString("location");;
                long ironAmount = rs.getLong("ironAmount");
                long ironCost = rs.getLong("ironCost");
                long budget = rs.getLong("budget");
                
                model.addRow(new Object[]{budget, ironCost, ironAmount, location, customer, id});
                projects.add(new Project(rs.getLong("id"), rs.getString("customer"), rs.getString("location"), rs.getString("notes"), rs.getLong("ironAmount"), rs.getLong("ironCost"), rs.getLong("budget")));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        model.fireTableDataChanged();
        jTable1.setModel(model);
        
    }
    
    public void updateTable2(){
        names5 = new ArrayList<>();
        model6.setRowCount(0);
        try {
            String sql = "select * from employeenames order by name";
            ResultSet rs = db.select(sql);

            while(rs.next()){
                String name = rs.getString("name");
                
                model6.addRow(new Object[]{java.time.LocalDate.now(), null, name});
                names5.add(new Employee(rs.getLong("id"), name));
            }
        } catch (SQLException ex) {
            Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        model6.fireTableDataChanged();
        jTable9.setModel(model6);
        
        if(model6.getRowCount() > 0){
            jButton4.setEnabled(true);
            jButton24.setEnabled(true);
            jButton26.setEnabled(true);
        }
        else{
            jButton4.setEnabled(false);
            jButton24.setEnabled(false);
            jButton26.setEnabled(false);
        }
    }
    
    public void updateTable3(int type, String name){
        if(panel == 2){
            dailyArr = new ArrayList<>();
            model9.setRowCount(0);
                        try{
                        
                        String sql = "select * from dailyspend where date between '" + sDate2 + "' and '" + eDate2 + "' order by date";
                        
                        
                        ResultSet rs = db.select(sql);
                        
                        long sum = 0;
                        while(rs.next()){
                            sum += rs.getLong("amount");
                            model9.addRow(new Object[]{rs.getString("date"), rs.getLong("amount"), rs.getString("details")});
                            dailyArr.add(new DailySpend(rs.getLong("id"), rs.getString("details"), rs.getString("date"), rs.getLong("amount")));
                        }
                        
                        model9.fireTableDataChanged();
                        jTable13.setModel(model9);
                        
                        if(model9.getRowCount() > 0){
                            jTextField13.setText(df2.format(sum) + "");
                            jButton23.setEnabled(true);
                            jButton25.setEnabled(true);
                        }
                        else{
                            
                            jTextField13.setText("");
                            jButton23.setEnabled(false);
                            jButton25.setEnabled(false);
                            
                            JOptionPane.showMessageDialog(null, "لا يوجد بيانات لعرضها خلال هذه الفترة المحددة");
                            
                        }
                        }catch(Exception e){
                            
                        }
        }
        else{
            
        
        emps = new ArrayList<>();
        model7.setRowCount(0);
                        try{
                        String sql = "";
                        if(type == 1){
                            sql = "select * from employee where date between '" + sDate + "' and '" + eDate + "' order by date";
                        }
                        else{
                            sql = "select * from employee where name like '%" + name + "%' order by name";
                        }
                        
                        ResultSet rs = db.select(sql);
                        
                        long sum = 0;
                        while(rs.next()){
                            sum += rs.getLong("amount");
                            model7.addRow(new Object[]{rs.getString("date"), rs.getLong("amount"), rs.getString("name")});
                            emps.add(new Employee(rs.getLong("id"), rs.getString("name"), rs.getLong("amount"), rs.getString("date")));
                        }
                        
                        model7.fireTableDataChanged();
                        jTable11.setModel(model7);
                        
                        if(model7.getRowCount() > 0){
                            jTextField9.setText(df2.format(sum) + "");
                            jButton11.setEnabled(true);
                            jButton16.setEnabled(true);
                        }
                        else{
                            
                            jTextField9.setText("");
                            jButton11.setEnabled(false);
                            jButton16.setEnabled(false);
                            if(type == 1){
                                JOptionPane.showMessageDialog(null, "لا يوجد بيانات لعرضها خلال هذه الفترة المحددة");
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "لا يوجد عامل بهذا الاسم");
                            }
                        }
                        }catch(Exception e){
                            
                        }
        }
    }
    
    public void initTable(int type){
        if(type == 1){
        for(int row = 0; row < model2.getRowCount(); row++){    
                model2.setValueAt(java.time.LocalDate.now().toString(), row, 0);
                model2.setValueAt(null, row, 1);
                model2.setValueAt(null, row, 2);
        }
        }
            else{
            for(int row = 0; row < model8.getRowCount(); row++){    
                model8.setValueAt(java.time.LocalDate.now().toString(), row, 0);
                model8.setValueAt(null, row, 1);
                model8.setValueAt(null, row, 2);
            }
            }
    }
   
    
    public void initTable2(){
        for(int row = 0; row < model4.getRowCount(); row++){
            model4.setValueAt(java.time.LocalDate.now().toString(), row, 0);
            model4.setValueAt(null, row, 1);
            model4.setValueAt(null, row, 2);
            model4.setValueAt(null, row, 3);
        }
    }
    
    public void initTable3(){
        for(int row = 0; row < model6.getRowCount(); row++){
            model6.setValueAt(java.time.LocalDate.now().toString(), row, 0);
            model6.setValueAt(null, row, 1);
            
        }
    }
    public String casting(String s){
        String[] ss = s.split(",");
        String last = "";
        for(int i = 0; i < ss.length; i++){
            last += ss[i];
        }
        return last;
    } 
    
    public void combo(){
        String sql = "select id from projects order by id";
            try {
                ResultSet rs = db.select(sql);
                
                if(jComboBox2.getItemCount() > 1){
                while(rs.next()){
                        boolean stat = false;
                        for(int q = 1; q < jComboBox2.getItemCount(); q++){
                            long temp = Integer.parseInt(jComboBox2.getItemAt(q));
                            if(temp == rs.getLong("id")){
                                stat = true;
                                break;
                                
                            }
                        }
                        if(!stat){
                            jComboBox2.insertItemAt(rs.getLong("id") + "", rs.getRow());
                            
                        }
                        
                }}
                else{
                    while(rs.next()){
                            jComboBox2.addItem(rs.getLong("id") + "");
                    }
                  
                }
            }catch(Exception e){
                
            }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable10;
    private javax.swing.JTable jTable11;
    private javax.swing.JTable jTable12;
    private javax.swing.JTable jTable13;
    private javax.swing.JTable jTable8;
    private javax.swing.JTable jTable9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables


static class DecimalFormatRenderer extends DefaultTableCellRenderer {
      private static final DecimalFormat formatter = new DecimalFormat( "0.00" );
 
      public Component getTableCellRendererComponent(
         JTable table, Object value, boolean isSelected,
         boolean hasFocus, int row, int column) {
 
         // First format the cell value as required
         this.setHorizontalAlignment( JLabel.CENTER );
         formatter.setGroupingUsed(true);
         formatter.setGroupingSize(3);
         if(value != null){
            value = formatter.format((Number)value);
         }
         
 
            // And pass it on to parent class
 
         return super.getTableCellRendererComponent(
            table, value, isSelected, hasFocus, row, column );
      }
   }

static class DecimalFormatRenderer2 extends DefaultTableCellRenderer {
      private static final DecimalFormat formatter = new DecimalFormat( "0" );
 
      public Component getTableCellRendererComponent(
         JTable table, Object value, boolean isSelected,
         boolean hasFocus, int row, int column) {
 
         // First format the cell value as required
         this.setHorizontalAlignment( JLabel.CENTER );
         formatter.setGroupingUsed(true);
         formatter.setGroupingSize(3);
         if(value != null){
            value = formatter.format((Number)value);
         }
         
 
            // And pass it on to parent class
 
         return super.getTableCellRendererComponent(
            table, value, isSelected, hasFocus, row, column );
      }
   }
}


