package GUI;


import java.awt.event.*;
import java.sql.*;
import java.text.*;
import java.util.*;
import java.util.logging.*;
import javax.swing.*;
import javax.swing.table.*;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author AkramKutifah
 */
public class ProjectDetail extends javax.swing.JFrame {

    /**
     * Creates new form ProjectDetail
     */
    DefaultTableModel model = null;
    ArrayList<Entities.ProjectDetail> detArr = null;
    int counter = 0;
    DecimalFormat df = null;
    
    public ProjectDetail() {
        initComponents();
        
        detArr = new ArrayList<>();
        
        df = new DecimalFormat("0");
        df.setGroupingUsed(true);
        df.setGroupingSize(3);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int i = 0; i < 4; i++){
            jTable1.getColumnModel().getColumn(i).setCellRenderer( centerRenderer );
        }
        jTable1.getColumnModel().getColumn(1).setCellRenderer( new mainGUI.DecimalFormatRenderer2() );
        model = (DefaultTableModel) jTable1.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("المصاريف الخاصة بالمشاريع");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("أرقام المشاريع الموجودة:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "اختر أحد المشاريع" }));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTable1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "التاريخ", "كمية المال", "التفاصيل", "الرقم التسلسلي"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(25);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(0, 153, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton1.setText("حفظ التعديلات");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 153, 153));
        jButton2.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jButton2.setText("حذف");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1)
                        .addGap(241, 241, 241))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
            jComboBox1.setSelectedIndex(0);
            
                    jButton1.setEnabled(false);
                    jButton2.setEnabled(false);
        
            
                String sql = "select id from projects order by id";
            try {
                ResultSet rs = mainGUI.db.select(sql);
                
                while(rs.next()){
                            jComboBox1.addItem(rs.getLong("id") + "");
                }
                
                
            } catch (Exception ex) {
                
            }
                
        
        
        jComboBox1.addActionListener (new ActionListener () {

            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                detArr = new ArrayList<>();
                int id;
                counter = 0;
                model.setRowCount(0);
                if(jComboBox1.getSelectedIndex() != 0){
                    
                    jButton1.setEnabled(true);
                    jButton2.setEnabled(true);
                    id = Integer.parseInt(jComboBox1.getSelectedItem().toString());
                    
                    String sql2 = "select * from projectdetails where projectID = " + id + " order by date";
                    ResultSet rs2 = mainGUI.db.select(sql2);
                    while(rs2.next()){
                        model.addRow(new Object[]{rs2.getString("date"), rs2.getLong("amount"), rs2.getString("details"), ++counter});
                        detArr.add(new Entities.ProjectDetail(rs2.getLong("id"), rs2.getString("details"), rs2.getLong("amount"), rs2.getString("date")));
                    }
                    if(model.getRowCount() == 0){
                        jButton1.setEnabled(false);
                        jButton2.setEnabled(false);
                    
                    }
                    
                }
                else{
                    jButton1.setEnabled(false);
                    jButton2.setEnabled(false);
                    
                }
                } catch (SQLException ex) {
                        Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
               }
            }
        });    
        
    }//GEN-LAST:event_formComponentShown

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
        if(model.getRowCount() > 0){
            
            boolean state = false;
            int i = 0;
            for(int row = 0; row < model.getRowCount(); row++){
                
                state = false;
                
                String details = model.getValueAt(row, 2).toString();
                long amount = (Long)model.getValueAt(row, 1);
                String date = model.getValueAt(row, 0).toString();
                
                if(date.matches("[0-9]{4}-[0-9]{2}-[0-9]{2}")){
                
                    if(!details.equals(detArr.get(row).getDetails())){
                        state = true;
                        i = 1;
                    }
                    
                    else if(amount != detArr.get(row).getAmount()){
                        if(amount > 0){
                            state = true;
                            i = 1;
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "يجب أن تكون القيمة أكبر من الصفر");
                                model.setValueAt(detArr.get(row).getAmount(), row, 1);
                                i = 0;
                                break;
                        }
                    }
                    
                    else if(!date.equals(detArr.get(row).getDate())){
                        state = true;
                        i = 1;
                    }
                    if(state){
                        String sql = "update projectdetails set details = '" + details + "', amount = " + amount + ", date = '" + date + "' where id = " + detArr.get(row).getId() + "";
                        
                    try {
                        mainGUI.db.update(sql);
                    } catch (SQLException ex) {
                        Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                        
                    }
            }
                else{
                    JOptionPane.showMessageDialog(null, "قيمة حقل التاريخ يجب أن تكون على الشكل التالي YYYY-MM-DD");
                    model.setValueAt(detArr.get(row).getDate(), row, 0);
                    i = 0;
                    break;
                }
            }
                    if(i != 0){
                        JOptionPane.showMessageDialog(null, "تمت عملية التعديل بنجاح"); 
                        updateTable();
                    }
                    
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "لايمكن أن يكون هناك خلية رقمية فارغة في الجدول");
            updateTable();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
        if(jTable1.getSelectedRow() >= 0){
            int choice = JOptionPane.showConfirmDialog(null, "هل أنت متأكد من هذه العملية؟", "تنبيه!!!", JOptionPane.YES_NO_OPTION);
            if(choice == JOptionPane.YES_OPTION){
                
                    String sql = "delete from projectdetails where id = " + detArr.get(jTable1.getSelectedRow()).getId() + "";
                    mainGUI.db.delete(sql);
                
                updateTable();
                JOptionPane.showMessageDialog(null, "تمت عملية الحذف بنجاح");
            }
                
        }
        else{
            JOptionPane.showMessageDialog(null, "يجب أن تختار سطر من الجدول حتى تتم عملية الحذف وذلك عن طريق النقر بالفأرة على السطر المطلوب");
        }
        }catch(Exception e){}
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjectDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjectDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjectDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjectDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProjectDetail().setVisible(true);
            }
        });
    }
    
    public void updateTable(){
        detArr = new ArrayList<>();
        model.setRowCount(0);
        counter = 0;
        int id = Integer.parseInt(jComboBox1.getSelectedItem().toString());
        try {
            String sql2 = "select * from projectdetails where projectID = " + id + " order by date";
                    ResultSet rs2 = mainGUI.db.select(sql2);
                    while(rs2.next()){
                        model.addRow(new Object[]{rs2.getString("date"), rs2.getLong("amount"), rs2.getString("details"), ++counter});
                        detArr.add(new Entities.ProjectDetail(rs2.getLong("id"), rs2.getString("details"), rs2.getLong("amount"), rs2.getString("date")));
                    }
        } catch (SQLException ex) {
            Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        model.fireTableDataChanged();
        jTable1.setModel(model);
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}