package GUI;


import Utilities.DatabaseOperations;
import Entities.Bill;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Akram Kutifah
 */
public class Statistics extends javax.swing.JFrame {
    
    DatabaseOperations db = null;
    ArrayList<Bill> sells = null;
    DefaultTableCellRenderer centerRenderer = null;
    ArrayList<String> nameOfTables = null;
    /**
     * Creates new form Statistics
     */
    public Statistics() throws SQLException {
        initComponents();
        db = MainFrame.db;
        jTextField1.setEditable(false);
        jTextField2.setEditable(false);
        jLabel2.setText("");
        jLabel3.setText("");
        
        centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        
        for(int i = 0; i < 2; i++){
            jTable1.getColumnModel().getColumn(i).setHeaderRenderer(centerRenderer);
        }
        for(int f = 0; f < 3; f++){
            jTable2.getColumnModel().getColumn(f).setHeaderRenderer(centerRenderer);
        }
        nameOfTables = new ArrayList<>();
        ResultSet rs = db.getNameOfTables();
                while(rs.next()){
                    if(!rs.getString(3).equals("bills") & !rs.getString(3).equals("sells")){
                        nameOfTables.add(rs.getString(3));
                    }
                }
        jComboBox2.addItem("Choose type of products");
        for(int j = 0; j < nameOfTables.size(); j++){
            jComboBox2.addItem(nameOfTables.get(j));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("احصائيات");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jXDatePicker1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePicker1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("اختر تاريخ اليوم الذي تريد معرفة تفاصيل المبيعات فيه :");

        jLabel2.setText("ل.س");

        jLabel3.setText("ل.س");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("اجمالي المبيعات (الغلّة) :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("الأرباح :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("جميع الأصناف التي تم بيعها :");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "الكمية", "العناصر المباعة ضمن كل صنف"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("عملية الجرد");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("اختر صنف:");

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "الكمية الموجودة حاليا", "الكمية التي تم بيعها", "العنصر"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                    .addComponent(jTextField2))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel6)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel8)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel7)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addGap(53, 53, 53))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(73, 73, 73)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
            .addComponent(jSeparator1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jXDatePicker1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker1ActionPerformed
        try{
        jTextField1.setText("");
        jTextField2.setText("");
        jLabel2.setText("");
        jLabel3.setText("");
        jComboBox1.removeAllItems();
        
        Date date = jXDatePicker1.getDate();
        int monthInt = date.getMonth() + 1;
        
        String monthStr = "";
        if(monthInt < 10){
            monthStr = "0" + monthInt;
        }
        else{
            monthStr = monthInt + "";
        }
        String d = date.toString();
        String[] dd = d.split(" ");
        
        String selectedDate = monthStr + "-" + dd[2] + "-" + dd[5];
        
        String sql = "select sellsNum from bills where date = '" + selectedDate + "'";
        ResultSet rs = db.select(sql);
        
        double sellsTotal = 0.0;
        double profits = 0.0;
        
        ArrayList<Long> ids = new ArrayList<>();
        
        while(rs.next()){
            long sellsNum = rs.getLong("sellsNum");
            ids.add(sellsNum);
        }
        
        sells = new ArrayList<>();
        
        for(int i = 0; i < ids.size(); i++){
            
            String sql2 = "select type, name, quantity, price, total from sells where billNum = " + ids.get(i) + "";
            ResultSet rs2 = db.select(sql2);
            while(rs2.next()){
                String type = rs2.getString("type");
                String name = rs2.getString("name");
                double quantity = rs2.getDouble("quantity");
                double price = rs2.getDouble("price");
                double total = rs2.getDouble("total");
                sells.add(new Bill(0, type, name, quantity, price, total));
                
                sellsTotal += total;
            }
        }
        
        for(int j = 0; j < sells.size(); j++){
            
            String sql3 = "select price from " + sells.get(j).getType() + " where name = '" + sells.get(j).getName() + "'";
            ResultSet rs3 = db.select(sql3);
            
            double originalPrice = 0.0;
            while(rs3.next()){
                originalPrice = rs3.getDouble("price");
            }
            double temp = (sells.get(j).getPrice() - originalPrice) * sells.get(j).getQuantity();
            profits += temp;
            
            if(jComboBox1.getItemCount() < 1){
                jComboBox1.addItem(sells.get(j).getType());
            }
            else{
                boolean state = false;
                for(int k = 0; k < jComboBox1.getItemCount(); k++){
                    if(sells.get(j).getType().equals(jComboBox1.getItemAt(k))){
                        state = true;
                        break;
                    }
                }
                if(!state){
                    jComboBox1.addItem(sells.get(j).getType());
                }
            }
        }
        
        if(sellsTotal == 0.0){
            jTextField1.setText("لا يوجد مبيعات في هذا التاريخ");
            jTextField2.setText("لا يوجد مبيعات في هذا التاريخ");
        }
        else{
            jTextField1.setText(sellsTotal + "");
            jTextField2.setText(profits + "");
            jLabel2.setText("ل.س");
            jLabel3.setText("ل.س");
        }
        }catch(Exception e){}
    }//GEN-LAST:event_jXDatePicker1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        MainFrame.stat = null;
    }//GEN-LAST:event_formWindowClosing

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        String selectedType = (String)jComboBox1.getSelectedItem();
        model.setRowCount(0);
        for(int i = 0; i < sells.size(); i++){
            if(sells.get(i).getType().equals(selectedType)){
                if(model.getRowCount() < 1){
                    model.addRow(new Object[]{sells.get(i).getQuantity(), sells.get(i).getName()});
                }
                else{
                    boolean state = false;
                    for(int row = 0; row < model.getRowCount(); row++){
                        String name = (String)model.getValueAt(row, 1);
                        if(name.equals(sells.get(i).getName())){
                            double finalQ = (Double)model.getValueAt(row, 0) + sells.get(i).getQuantity();
                            model.setValueAt(finalQ, row, 0);
                            state = true;
                            break;
                        }
                        
                    }
                    if(!state){
                            model.addRow(new Object[]{sells.get(i).getQuantity(), sells.get(i).getName()});
                    }
                }
            }
        }
        model.fireTableDataChanged();
        for(int c = 0; c < 2; c++){
            jTable1.getColumnModel().getColumn(c).setCellRenderer( centerRenderer );
        }
        jTable1.setModel(model);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        try{
        DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
        String type = (String)jComboBox2.getSelectedItem();
        if(!type.contains("Choose")){
        model.setRowCount(0);
        
        String sql = "select name, quantity, originalQuantity from " + type + "";
        ResultSet rs = db.select(sql);
        while(rs.next()){
            double sellsQ = rs.getDouble("originalQuantity") - rs.getDouble("quantity");
            model.addRow(new Object[]{rs.getDouble("quantity"), sellsQ, rs.getString("name")});
        }
        model.fireTableDataChanged();
        for(int c = 0; c < 3; c++){
            jTable2.getColumnModel().getColumn(c).setCellRenderer( centerRenderer );
        }
        jTable2.setModel(model);
        }
        else{
            model.setRowCount(0);
        }
        }catch(Exception e){}
    }//GEN-LAST:event_jComboBox2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Statistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Statistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Statistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Statistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Statistics().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    // End of variables declaration//GEN-END:variables
}
