package GUI;


import Utilities.DatabaseOperations;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Akram Kutifah
 */
public class AddNewItem extends javax.swing.JFrame {
    
    DatabaseOperations db = null;
    ArrayList<String> nameOfTables = null;
    
    char[] arabic = {'ذ','ض','ص','ث','ق','ف','غ','ع','ه','خ','ح','ج','د','ش','س','ي','ب','ل','ا','أ','إ','آ','ت','ن','م','ك','ط','ئ','ء','ؤ','ر','ى','ة','و','ز','ظ'};
    /**
     * Creates new form AddNewProduct
     */
    @SuppressWarnings("empty-statement")
    public AddNewItem() throws Exception {
        initComponents();
        db = MainFrame.db; 
        nameOfTables = new ArrayList<>();
        
        ResultSet rs = db.getNameOfTables();
            while(rs.next()){
                if(!rs.getString(3).equals("bills") & !rs.getString(3).equals("sells")){
                    nameOfTables.add(rs.getString(3));
                }
            }
        
        if(nameOfTables.isEmpty()){
            jComboBox1.setEnabled(false);
            jTextField2.setEnabled(false);
            jTextField3.setEnabled(false);
            jTextField4.setEnabled(false);
            jTextArea1.setEnabled(false);
            jButton2.setEnabled(false);
        }
        else {
            for(int i = 0; i < nameOfTables.size(); i++){
               jComboBox1.addItem(nameOfTables.get(i));
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ادخال صنف جديد");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jButton1.setText("اضافة");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("اكتب اسم الصنف المراد اضافته في الحقل التالي ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("اسم العنصر:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("الكمية (غ / كغ / قطعة) :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("سعر الكمية الواحدة (ل.س) :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("وصف عن العنصر (خياري):");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("اختر الصنف الذي تريد اضافة عناصر له:");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 0, 0));
        jLabel9.setText("علما أنه يجب أن يكون الاسم عبارة عن سلسلة محارف عربية أو سلسلة محارف أجنبية فقط ومن دون فراغات");

        jButton2.setBackground(new java.awt.Color(204, 255, 204));
        jButton2.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jButton2.setText("اضافة عنصر");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(160, 160, 160)
                            .addComponent(jLabel4))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addComponent(jSeparator2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
        
        String s = jTextField1.getText(); 
        if((!s.equals("")) & (!s.matches("[ ]+"))){
            if(!s.matches("[a-zA-Z]+")){
                
                    if(!validate(s)){
                        JOptionPane.showMessageDialog(null, "قيمة الحقل غير صالحة، الرجاء قراءة العبارة المكتوبة باللون الأحمر بتمعن");
                        jTextField1.setText("");
                    }
                    else{
                        go(s);
                    }
                 
            }
            else{
                go(s);
            }
        }
        else {
            jTextField1.setText("");
        }
        }catch(Exception e){
            
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
        
        if (("".equals(jTextField2.getText())) || ("".equals(jTextField3.getText())) || ("".equals(jTextField4.getText()))){
            JOptionPane.showMessageDialog(null, "جميع الحقول يجب أن تكون ممتلئة ماعدا حقل الوصف فهو خياري");
        }
        
        else if((jTextField2.getText().matches("[ ]+")) || (jTextField3.getText().matches("[ ]+")) || (jTextField4.getText().matches("[ ]+"))){
            JOptionPane.showMessageDialog(null, "جميع الحقول يجب أن تكون ممتلئة ماعدا حقل الوصف فهو خياري");
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
        }
        
        else{
            double quantity = Double.parseDouble(jTextField3.getText());
            double price = Double.parseDouble(jTextField4.getText());
                
            if((quantity < 1) || (price < 1)){
                JOptionPane.showMessageDialog(null, "قيمة أحد الحقلين (الكمية، السعر) يجب أن تكون أكبر من الصفر");
            }
            else{
            
            String nameOfItem = jTextField2.getText();
            String description = jTextArea1.getText();
            
            String type = (String)jComboBox1.getSelectedItem();
            
            String sql = "select name from " + type + "";
            ResultSet rs = db.select(sql);
            boolean state = false;
            while(rs.next()){
                if(nameOfItem.equals(rs.getString("name"))){
                    state = true;
                    break;
                }
            }
            if(state){
                JOptionPane.showMessageDialog(null, "اسم العنصر موجود مسبقا و لا يمكن أن يوجد في نفس الصنف عنصرين بنفس الاسم");
                jTextField2.setText("");
                jTextField3.setText("");
                jTextField4.setText("");
                jTextArea1.setText("");
            }
            else{
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("MM-dd-yyyy HH:mm:ss");  
                LocalDateTime now = LocalDateTime.now();  
                String s = dtf.format(now); 
                String[] ss = s.split("[ ]");
            
            sql = "insert into " + type + " (name, quantity, price, description, date, time, originalQuantity) values ('" + nameOfItem + "', " + quantity + ", " + price + ", '" + description + "', '" + ss[0] + "', '" + ss[1] + "', " + quantity + ")";
            
                db.insert(sql);
                JOptionPane.showMessageDialog(null, "تمت عملية اضافة العنصر بنجاح");
                jTextField2.setText("");
                jTextField3.setText("");
                jTextField4.setText("");
                jTextArea1.setText("");
            }
        }
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "قيمة أحد الحقلين (الكمية، السعر) غير صالحة، علما أن قيمة هذين الحقلين يجب أن تكون رقما صحيحا");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        MainFrame.newItem = null;
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AddNewItem().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(AddNewItem.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    public boolean validate(String s){
        boolean state = false;
        
        for(int i = 0; i < s.length(); i++){
            state = false;
            for(int j = 0; j < arabic.length; j++){
                if(s.charAt(i) == arabic[j]){
                    state = true;
                    break;
                }
            }
            if(!state){
                return false;
            }
        }
        return true;
    }
    
    public void go(String s) throws SQLException{
        
        int choice = JOptionPane.showConfirmDialog(null, "إن الصنف الذي تتم اضافته لايمكن تعديل اسمه او حذفه، هل أنت متأكد من هذه العملية؟", "تنبيه!!!", JOptionPane.YES_NO_OPTION);
            if(choice == JOptionPane.YES_OPTION){
                boolean state = false;
        
                for(int i = 0; i < nameOfTables.size(); i++){
                    if(s.equals(nameOfTables.get(i))){
                        JOptionPane.showMessageDialog(null, "الصنف الذي تم ادخاله موجود مسبقا");
                        state = true;
                        jTextField1.setText("");
                        break;
                    }
                }
                if(!state){
                   String sql = "CREATE TABLE IF NOT EXISTS " + s + " (\n"
                        + "	id bigint not null PRIMARY KEY AUTO_INCREMENT,\n"
                        + "     name varchar(200) null,\n"
                        + "     quantity double null,\n"
                        + "     price double null,\n"
                        + "     description varchar(200) null,\n"
                        + "     date varchar(200) null,\n"
                        + "     time varchar(200) null,\n"
                        + "     originalQuantity double null\n"
                        + ");";
                   boolean bool = db.execute(sql);
                   JOptionPane.showMessageDialog(null, "تمت عملية اضافة الصنف بنجاح، الان يمكنك من القسم اليميني من الواجهة اختيار هذا الصنف و اضافة عناصر له");
                   jTextField1.setText("");
                   nameOfTables.add(s);
                   jComboBox1.addItem(s);

                        jComboBox1.setEnabled(true);
                        jTextField2.setEnabled(true);
                        jTextField3.setEnabled(true);
                        jTextField4.setEnabled(true);
                        jTextArea1.setEnabled(true);
                        jButton2.setEnabled(true);
                   
                   MainFrame.sync = s;
                }
            }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
